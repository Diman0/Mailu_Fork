name: test-docker-login stuff
on:
  workflow_dispatch:


concurrency: ci-release-${{ github.ref }}

jobs:

  build-arm:
    name: test docker login and creating builder
    runs-on: ubuntu-latest
    permissions:
     contents: read
     packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Helper to convert docker org to lowercase
        id: string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository_owner }}
      #This is to prevent to shared runners from generating the same uuid
      - name: Get unique random number
        id: uuid
        run: |
            echo uuid=$RANDOM >> $GITHUB_OUTPUT
      - name: Build docker image with retry
        env:
          BUILDER: ${{ steps.uuid.outputs.uuid }}-${{ runner.name }}
          DOCKER_LOGIN2: ${{ secrets.Docker_Login }}
          DOCKER_PASSW2: ${{ secrets.Docker_Password }}
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          retry_wait_seconds: 30
          max_attempts: 10
          shell: bash
          command: |
            set -euxo pipefail \
              ; echo "${{ github.token }}" |        docker login --username "${{ github.repository_owner }}" --password-stdin ghcr.io \
              ; echo "${{ env.DOCKER_PASSW2 }}" |   docker login --username "${{ env.DOCKER_LOGIN2 }}" --password-stdin \
              ; /usr/bin/docker buildx rm builder-${{ env.BUILDER }} \
              || echo "builder does not exist" \
              ; /usr/bin/docker buildx create --name builder-${{ env.BUILDER }} --driver docker-container --use \
              ; echo "We pretend we are building something now with docker buildx bake" \
              ; /usr/bin/docker buildx rm builder-${{ env.BUILDER }}                
      - name: cleanup docker buildx instance after failure of build step
        if: ${{ failure() }}
        shell: bash
        env:
          BUILDER: ${{ steps.uuid.outputs.uuid }}
        run: |
          /usr/bin/docker buildx rm builder-${{ env.BUILDER }}
